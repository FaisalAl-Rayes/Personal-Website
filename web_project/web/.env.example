################################################################### MyWebsite/settings/base.py ###################################################################

# The secret key django uses for cryptographic signing, session management, password hashing, and other security related operations.
# TIP: you can generate your production grade secret key using "django.core.management.utils.get_random_secret_key()"
SECRET_KEY="YOUR_SUPER_SECRET_KEY"


####################################################### MyWebsite/settings/development.py or production.py #######################################################

# Choose whether you will be running the development or production settings.
DJANGO_SETTINGS_MODULE="MyWebsite.settings.production"

# Ensure that this is the same as the database service name in the docker-compose file, "db" in this case.
DATABASE_HOST=db
###
# For the setting of the database name, user, password, and port please check /web_project/.shared_secrets/django_db.env(.example).
###

####################################################################### MyWebsite/urls.py #######################################################################

# Setting the secret path/endpoint that must exist after the domain and before the "/admin".
# So to access the admin it will look like "www.your_website.com/YOUR_SUPER_SECRET_PRE_ADMIN_ENDPOINT/admin".
# This is useful to avoid someone trying to access your admin page then try to figure out your admin user name and password somehow.
SECRET_ADMIN_URL=YOUR_SUPER_SECRET_PRE_ADMIN_ENDPOINT