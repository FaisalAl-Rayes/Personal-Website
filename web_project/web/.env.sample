############################################################# MyWebsite/settings/base.py #############################################################

# The secret key django uses for cryptographic signing, session management, password hashing, and other security related operations.
# TIP: you can generate your production grade secret key using "django.core.management.utils.get_random_secret_key()"
SECRET_KEY="YOUR_SUPER_SECRET_KEY"


################################################# MyWebsite/settings/development.py or production.py #################################################

# Choose whether you will be running the development or production settings.
DJANGO_SETTINGS_MODULE="MyWebsite.settings.production"


########################################################## MyWebsite/settings/production.py ##########################################################

# Setting the database engine to "psycopg2" since the database in use here is PostgreSQL.
DATABASE_ENGINE=django.db.backends.postgresql_psycopg2
# Setting the database name, user, and password
DATABASE_NAME=YOUR_DB_NAME
DATABASE_USER=YOUR_DB_USER
DATABASE_PASSWORD=YOUR_DB_PASSWORD
# Ensure that this is the same as the database service name in the docker-compose file, "db" in this case.
DATABASE_HOST=db
# Ensure that this is the same port that the db is listening on. check the "db" service in the docker-compose file.
DATABASE_PORT=5151


################################################################# MyWebsite/urls.py #################################################################

# Setting the secret path/endpoint that must exist after the domain and before the "/admin".
# So to access the admin it will look like "www.your_website.com/YOUR_SUPER_SECRET_PRE_ADMIN_ENDPOINT/admin".
# This is useful to avoid someone trying to access your admin page then try to figure out your admin user name and password somehow.
SECRET_ADMIN_URL=YOUR_SUPER_SECRET_PRE_ADMIN_ENDPOINT