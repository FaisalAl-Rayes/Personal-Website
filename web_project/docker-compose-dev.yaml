version: '3.9'

services:
  # proxy:
  #   build:
  #     context: ./proxy
  #     dockerfile: Dockerfile.proxy
  #     secrets:
  #       - django_web_env
  #   container_name: django-server
  #   entrypoint: gunicorn myapp.wsgi:application --bind 0.0.0.0:8000
  #   volumes:
  #     - web-static-data:/home/django/Django_Project/static/
  #   ports:
  #     - "8001:8000"
  #   depends_on:
  #     - web
  #   restart: unless-stopped
  #   networks:
  #     - frontend

  web:
    build:
      context: ./web
      dockerfile: Dockerfile.web
    container_name: django-server
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - web-static-data:/vol/web
    ports:
      - "8000:8000"
    depends_on:
      - db
      # - vault
    restart: unless-stopped
    networks:
      - frontend
      - backend

  db:
    build:
      context: ./db
      dockerfile: Dockerfile.db
    container_name: db-server
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: django_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: supersecretpassword
    restart: unless-stopped
    networks:
      - backend

  # vault:
  #   build:
  #     context: .
  #     dockerfile: DockerFile.vault
  #     secrets:
  #       - django_web_env
  #   container_name: vault-server
  #   command: gunicorn myapp.wsgi:application --bind 0.0.0.0:8000
  #   volumes:
  #     - web-static-data:/home/django/Django_Project/static/
  #   ports:
  #     - "8001:8000"
  #   depends_on:
  #     - db
  #   restart: unless-stopped
  #   networks:
  #     - backend

networks:
  frontend:
  backend:

volumes:
  web-static-data:
  db-data:

# secrets:
#   django_web_env:
#     file: docker-secret.env